
import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent } from '@/components/ui/card';
import { ShieldAlert, Shield, Info } from 'lucide-react';
import { Vulnerability } from '../../types';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Button } from '@/components/ui/button';

interface VulnerabilitySummaryProps {
  vulnerabilities: Vulnerability[];
}

const VulnerabilitySummary: React.FC<VulnerabilitySummaryProps> = ({ vulnerabilities }) => {
  const criticalCount = vulnerabilities.filter(vuln => vuln.severity === 'critical').length;
  const highCount = vulnerabilities.filter(vuln => vuln.severity === 'high').length;
  const moderateCount = vulnerabilities.filter(vuln => vuln.severity === 'moderate').length;
  const lowCount = vulnerabilities.filter(vuln => vuln.severity === 'low').length;
  
  const totalCount = vulnerabilities.length;
  const securityScore = totalCount > 0 
    ? Math.max(0, 100 - (criticalCount * 25 + highCount * 10 + moderateCount * 5 + lowCount * 1))
    : 100;
  
  const getScoreColor = () => {
    if (securityScore >= 90) return 'text-green-500';
    if (securityScore >= 70) return 'text-amber-500';
    return 'text-red-500';
  };
  
  const getProgressColor = () => {
    if (securityScore >= 90) return 'bg-green-500';
    if (securityScore >= 70) return 'bg-amber-500';
    return 'bg-red-500';
  };
  
  return (
    <Card>
      <CardContent className="p-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3 }}
          className="flex flex-col md:flex-row gap-6"
        >
          <div className="flex-1">
            <div className="flex items-start gap-4">
              {totalCount === 0 ? (
                <div className="bg-green-100 dark:bg-green-900/30 p-3 rounded-full">
                  <Shield className="h-8 w-8 text-green-500" />
                </div>
              ) : (
                <div className="bg-red-100 dark:bg-red-900/30 p-3 rounded-full">
                  <ShieldAlert className="h-8 w-8 text-red-500" />
                </div>
              )}
              
              <div>
                <h3 className="text-lg font-medium">
                  {totalCount === 0 ? 'No Vulnerabilities Detected' : 'Vulnerability Summary'}
                </h3>
                <p className="text-sm text-muted-foreground mt-1">
                  {totalCount === 0 
                    ? 'Your project dependencies are secure.' 
                    : `Found ${totalCount} issues across your dependencies.`}
                </p>
              </div>
            </div>
            
            {totalCount > 0 && (
              <div className="mt-6 grid grid-cols-2 md:grid-cols-4 gap-2">
                <div className="bg-red-50 dark:bg-red-900/20 border border-red-100 dark:border-red-800 rounded-lg p-3 text-center">
                  <div className="text-xl font-bold text-red-700 dark:text-red-400">{criticalCount}</div>
                  <div className="text-xs text-red-600 dark:text-red-400">Critical</div>
                </div>
                
                <div className="bg-amber-50 dark:bg-amber-900/20 border border-amber-100 dark:border-amber-800 rounded-lg p-3 text-center">
                  <div className="text-xl font-bold text-amber-700 dark:text-amber-400">{highCount}</div>
                  <div className="text-xs text-amber-600 dark:text-amber-400">High</div>
                </div>
                
                <div className="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-100 dark:border-yellow-800 rounded-lg p-3 text-center">
                  <div className="text-xl font-bold text-yellow-700 dark:text-yellow-400">{moderateCount}</div>
                  <div className="text-xs text-yellow-600 dark:text-yellow-400">Moderate</div>
                </div>
                
                <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-100 dark:border-blue-800 rounded-lg p-3 text-center">
                  <div className="text-xl font-bold text-blue-700 dark:text-blue-400">{lowCount}</div>
                  <div className="text-xs text-blue-600 dark:text-blue-400">Low</div>
                </div>
              </div>
            )}
          </div>
          
          <div className="w-full md:w-48 flex flex-col items-center justify-center">
            <div className="text-center mb-2">
              <div className={`text-3xl font-bold ${getScoreColor()}`}>{securityScore}</div>
              <div className="text-xs text-muted-foreground">Security Score</div>
            </div>
            <Progress 
              value={securityScore} 
              className="h-2.5 w-full mb-4"
              indicatorClassName={getProgressColor()}
            />
            {totalCount > 0 && (
              <Button variant="outline" size="sm" className="flex items-center gap-2 w-full">
                <Info className="h-4 w-4" />
                Fix Vulnerabilities
              </Button>
            )}
          </div>
        </motion.div>
      </CardContent>
    </Card>
  );
};

export default VulnerabilitySummary;
